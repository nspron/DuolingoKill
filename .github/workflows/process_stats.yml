name: Process Device Stats

on:
  issues:
    types: [opened]

jobs:
  process-device-stats:
    if: contains(github.event.issue.labels.*.name, 'device_stats')
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      issues: read
      pull-requests: write
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up jq
        run: sudo apt-get install -y jq

      - name: Process stats data
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          #!/bin/bash
          set -eo pipefail

          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git config --global --add safe.directory /github/workspace

          TITLE="${{ github.event.issue.title }}"
          BODY=$(echo '${{ toJson(github.event.issue.body) }}' | jq -r '.')

          if ! [[ "$TITLE" =~ ^DeviceStats\ -\ [0-9]{4}-[0-9]{2}-[0-9]{2}\ - ]]; then
            echo "::error::Invalid issue title format: $TITLE"
            exit 1
          fi

          DEVICE_ID=$(echo "$BODY" | jq -r '.device_id')
          DATE=$(echo "$BODY" | jq -r '.date')
          OPEN_COUNT=$(echo "$BODY" | jq -r '.open_count')
          REPORT_TIME=$(echo "$BODY" | jq -r '.report_time')
          DEVICE_MODEL=$(echo "$BODY" | jq -r '.device_model')
          ANDROID_VERSION=$(echo "$BODY" | jq -r '.android_version')
          MANUFACTURER=$(echo "$BODY" | jq -r '.manufacturer')
          SDK_VERSION=$(echo "$BODY" | jq -r '.sdk_version')

          REQUIRED_FIELDS=("$DEVICE_ID" "$DATE" "$OPEN_COUNT")
          for field in "${REQUIRED_FIELDS[@]}"; do
            if [[ -z "$field" ]]; then
              echo "::error::Missing required field in body"
              exit 1
            fi
          done

          CSV_FILE="stats/device_stats.csv"
          mkdir -p stats
          if [ ! -f "$CSV_FILE" ]; then
            echo "date,device_id,open_count,report_time,device_model,android_version,manufacturer,sdk_version" > "$CSV_FILE"
          fi

          TEMP_FILE=$(mktemp)
          {
            awk -v device_id="$DEVICE_ID" -F, '
              BEGIN { OFS=FS }
              NR==1 { print; next }
              $2 != "\""device_id"\"" { print }
            ' "$CSV_FILE"
            echo "\"$DATE\",\"$DEVICE_ID\",$OPEN_COUNT,\"$REPORT_TIME\",\"$DEVICE_MODEL\",\"$ANDROID_VERSION\",\"$MANUFACTURER\",$SDK_VERSION"
          } > "$TEMP_FILE" && mv "$TEMP_FILE" "$CSV_FILE"

          git add "$CSV_FILE"
          if ! git diff-index --quiet HEAD --; then
            git commit -m "ðŸ“Š Update stats for device $DEVICE_ID"
            git push origin HEAD:main
          else
            echo "No changes to commit"
          fi

      - name: Create summary
        run: |
          echo "## ðŸ“ˆ Device Stats Updated" >> $GITHUB_STEP_SUMMARY
          echo "- Processed data for device: $DEVICE_ID" >> $GITHUB_STEP_SUMMARY
          echo "- Open count: $OPEN_COUNT" >> $GITHUB_STEP_SUMMARY
          echo "- Device model: $DEVICE_MODEL" >> $GITHUB_STEP_SUMMARY

      - name: Clear Issue Content and Close Issue
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          ISSUE_NUMBER: ${{ github.event.issue.number }}
        run: |
          ISSUE_ID=$(gh api graphql -f query='
            query(\$NUMBER: Int!) {
              repository(owner: "\${{ github.repository_owner }}", name: "\${{ github.event.repository.name }}") {
                issue(number: \$NUMBER) {
                  id
                }
              }
            }
          ' -F NUMBER=$ISSUE_NUMBER | jq -r '.data.repository.issue.id')

          gh api graphql -f query='
            mutation(\$ISSUE_ID: ID!) {
              updateIssue(input: {id: \$ISSUE_ID, body: ""}) {
                clientMutationId
              }
            }
          ' -F ISSUE_ID=$ISSUE_ID

          gh api graphql -f query='
            mutation(\$ISSUE_ID: ID!) {
              closeIssue(input: {issueId: \$ISSUE_ID}) {
                clientMutationId
              }
            }
          ' -F ISSUE_ID=$ISSUE_ID
